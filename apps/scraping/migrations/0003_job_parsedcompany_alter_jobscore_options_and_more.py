# Generated by Django 4.2 on 2025-06-07 18:12

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('scraping', '0002_linkedinauth_vacancy_salary_currency_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('company', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('url', models.URLField(unique=True)),
                ('source', models.CharField(max_length=50)),
                ('posted_date', models.DateTimeField(blank=True, null=True)),
                ('employment_type', models.CharField(blank=True, max_length=100, null=True)),
                ('salary', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
                'ordering': ['-posted_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParsedCompany',
            fields=[
                ('employer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('job_count', models.IntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parsed Company',
                'verbose_name_plural': 'Parsed Companies',
            },
        ),
        migrations.AlterModelOptions(
            name='jobscore',
            options={'ordering': ['-score', '-updated_at'], 'verbose_name': 'Job Score', 'verbose_name_plural': 'Job Scores'},
        ),
        migrations.AlterModelOptions(
            name='linkedinauth',
            options={'ordering': ['-created_at'], 'verbose_name': 'LinkedIn Auth', 'verbose_name_plural': 'LinkedIn Auths'},
        ),
        migrations.RenameField(
            model_name='jobscore',
            old_name='last_updated',
            new_name='updated_at',
        ),
        migrations.RemoveField(
            model_name='jobscore',
            name='company_score',
        ),
        migrations.RemoveField(
            model_name='jobscore',
            name='relevance_score',
        ),
        migrations.RemoveField(
            model_name='jobscore',
            name='salary_score',
        ),
        migrations.RemoveField(
            model_name='jobscore',
            name='total_score',
        ),
        migrations.RemoveField(
            model_name='jobscore',
            name='vacancy',
        ),
        migrations.RemoveField(
            model_name='linkedinauth',
            name='access_token',
        ),
        migrations.RemoveField(
            model_name='linkedinauth',
            name='expires_at',
        ),
        migrations.RemoveField(
            model_name='linkedinauth',
            name='refresh_token',
        ),
        migrations.AddField(
            model_name='jobscore',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='jobscore',
            name='score',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='linkedinauth',
            name='email',
            field=models.EmailField(default=3, max_length=254, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='linkedinauth',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='linkedinauth',
            name='password',
            field=models.CharField(default=3, max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='jobscore',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='linkedinauth',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.CreateModel(
            name='ParsedJob',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('company', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('salary_from', models.FloatField(blank=True, null=True)),
                ('salary_to', models.FloatField(blank=True, null=True)),
                ('remote_work', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(blank=True, null=True)),
                ('expiration_date', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='scraping.parsedcompany')),
            ],
            options={
                'verbose_name': 'Parsed Job',
                'verbose_name_plural': 'Parsed Jobs',
            },
        ),
        migrations.AddField(
            model_name='jobscore',
            name='job',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='score', to='scraping.job'),
        ),
    ]
