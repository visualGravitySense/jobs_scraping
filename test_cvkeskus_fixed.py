#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ CV Keskus —Å–∫—Ä–∞–ø–µ—Ä–∞
"""

import sys
import os
import json
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from apps.scraping.scrapers.cvkeskus_scraper import CVKeskusScraper

def test_cvkeskus_scraper():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CV Keskus —Å–∫—Ä–∞–ø–µ—Ä–∞"""
    print("=" * 80)
    print("üîç Testing FIXED CVKeskus scraper...")
    print("=" * 80)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–∫—Ä–∞–ø–µ—Ä–∞
        scraper = CVKeskusScraper()
        
        # –ò—â–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        jobs = scraper.search_jobs()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π: {len(jobs)}")
        
        if jobs:
            print("\n–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–∞–∫–∞–Ω—Å–∏—è:")
            print(json.dumps(jobs[-1], indent=2, ensure_ascii=False))
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 –≤–∞–∫–∞–Ω—Å–∏–π
            print(f"\n–ü–µ—Ä–≤—ã–µ 5 –≤–∞–∫–∞–Ω—Å–∏–π:")
            for i, job in enumerate(jobs[:5], 1):
                print(f"{i}. {job.get('title', 'N/A')} - {job.get('company', 'N/A')}")
        
        return len(jobs)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∫—Ä–∞–ø–µ—Ä–∞: {e}")
        return 0

if __name__ == "__main__":
    job_count = test_cvkeskus_scraper()
    print(f"\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π: {job_count}") 